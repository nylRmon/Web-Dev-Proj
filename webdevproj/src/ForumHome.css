:root {
  --middle-blue-green: hsl(176, 35%, 63%);
  --sonic-silver: hsl(0, 0%, 44%);
  --eerie-black: hsl(0, 0%, 9%);
  --ocean-green: hsl(148, 45%, 58%);
  --candy-pink: hsl(356, 65%, 63%);
  --cultured: hsl(0, 0%, 96%);
  --white: hsl(0, 0%, 100%);
  --black: hsl(0, 0%, 0%);

  --ff-jost: "Jost", sans-serif;

  --fs-1: 2.5rem;
  --fs-2: 1.75rem;
  --fs-3: 1.625rem;
  --fs-4: 1.5rem;
  --fs-5: 1.375rem;
  --fs-6: 1.25rem;
  --fs-7: 1.125rem;
  --fs-8: 0.938rem;
  --fs-9: 0.875rem;
  --fs-10: 0.813rem;

  --fw-500: 500;
  --fw-600: 600;

  --transition-1: 0.25s ease;
  --transition-2: 0.75s ease;
  --cubic-out: cubic-bezier(0.51, 0.03, 0.64, 0.28);
  --cubic-in: cubic-bezier(0.33, 0.85, 0.56, 1.02);

  --section-padding: 60px;
}

/*-----------------------------------*\
 * #RESET
\*-----------------------------------*/

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

li {
  list-style: none;
}

a {
  text-decoration: none;
}

a,
img,
span,
input,
button,
ion-icon {
  display: block;
}

input,
button {
  background: none;
  border: none;
  font: inherit;
}

button {
  text-align: left;
  cursor: pointer;
}

input {
  width: 100%;
  outline-color: var(--middle-blue-green);
}

img {
  height: auto;
}

ion-icon {
  pointer-events: none;
}

html {
  font-family: var(--ff-jost);
  color: var(--sonic-silver);
  scroll-behavior: smooth;
}

body {
  background: var(--white);
  padding-block: 70px;
}

/*-----------------------------------*\
 * #REUSED STYLE
\*-----------------------------------*/

.container1 {
  padding-inline: 15px;
}

a,
button {
  transition: var(--transition-1);
}

h3 > a {
  color: inherit;
}

.h1,
.h2,
.h3,
.h4 {
  color: var(--eerie-black);
  font-weight: var(--fw-600);
}

.h1 {
  font-size: var(--fs-1);
  line-height: 1;
}

.h2 {
  font-size: var(--fs-2);
}

.h3 {
  font-size: var(--fs-6);
}

.h4 {
  font-size: var(--fs-7);
  font-weight: var(--fw-500);
}

.btn {
  background: var(--background, var(--eerie-black));
  color: var(--color, var(--white));
  font-weight: var(--fw-600);
  height: var(--height, 60px);
  padding-inline: 50px;
  border: 1px solid var(--border-color, var(--eerie-black));
  border-radius: 6px;
  display: flex;
  justify-content: center;
  align-items: center;
}

.btn-primary:is(:hover, :focus) {
  --background: var(--white);
  --color: var(--eerie-black);
  --border-color: var(--eerie-black);
}

.btn-secondary {
  --height: 50px;
  --background: var(--white);
  --color: var(--eerie-black);
  --border-color: var(--white);
}

.btn-secondary:is(:hover, :focus) {
  --background: var(--eerie-black);
  --color: var(--white);
  --border-color: var(--eerie-black);
}

.btn-outline {
  --height: 50px;
  --background: var(--white);
  --color: var(--eerie-black);
  --border-color: var(--eerie-black);
  padding-inline: 40px;
}

.btn-outline:is(:hover, :focus) {
  --background: var(--eerie-black);
  --color: var(--white);
  --border-color: var(--eerie-black);
}

.section {
  padding-block: var(--section-padding);
}

.w-100 {
  width: 100%;
}

.section-title {
  text-align: center;
  margin-bottom: 30px;
}

.hero {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  width: 100%;
  min-height: 80vh;
  display: flex;
  align-items: center;
  background-image: "/tup_background.png";
  background-size: 1500px 600px; /* Adjust this property for optimal resolution */
  background-color: rgba(255, 255, 255, 0.5);
}

.hero .service_container {
  width: 100%;
}

.hero-subtitle {
  color: var(--white);
  font-size: var(--fs-4);
  font-weight: var(--fw-600);
  margin-bottom: 20px;
}

.hero-title {
  margin-bottom: 35px;
  max-width: 12ch;
  color: var(--white);
}
.hero-title {
  position: relative;
  transition: color 0.3s ease, background-color 0.3s ease,
    border-color 0.3s ease; /* Add color, background-color, and border-color transitions */
}

.hero-title::before {
  content: attr(
    data-content
  ); /* Use data-content attribute for the original text content */
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  color: transparent;
  -webkit-background-clip: text; /* Use -webkit- prefix for WebKit-based browsers */
  background-clip: text;
  background-color: transparent;
  z-index: -1;
  border: 2px solid transparent; /* Initial border properties */
  transition: inherit; /* Inherit the transition properties from the parent element */
}

.container1:hover .hero-title {
  color: black;
  /* Adjust the background color and opacity for the highlight effect */
}

.service {
  padding-block: var(--section-padding);
  text-align: center;
}


.service-list {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.service-item-title {
  color: var(--aerie--black);
  font-size: var(--fs--7);
  font-weight: var(--fw-600);
  margin-bottom: 10px;
}

.service-item-text{
  font-size: var(--fs-8);
  color: var(--sonic-silver);
}

.service-item {
  flex: 0 0 calc(25% - 20px); /* Adjust the width of each item for four items in a row */
  margin-bottom: 20px;
}

.service-item-icon {
  width: 45px;
  margin-inline: auto;
}

.service-content {
  text-align: center;
}

.service-item-icon img {
  margin-inline: auto;
}

.service-item-title {
  color: var(--eerie-black); /* Fix the custom property name */
  font-size: var(--fs-7);
  font-weight: var(--fw-600);
}

@media (min-width: 480px) {
  :root {
    --fs-1: 3rem;
    --fs-2: 2rem;
  }
}

@media (min-width: 580px) {
  :root {
    --fs-1: 3.75rem;
    --fs-2: 2.375rem;
    --fs-3: 2.25rem;
  }

  .container1 {
    max-width: 550px;
    margin-inline: auto;
  }
}

@media (min-width: 768px) {
  .hero {
    background-position: center;
    min-height: 800px;
  }
}

@media (min-width: 992px) {
  :root {
    --fs-1: 5rem;
  }

  body {
    padding-block: 0;
  }

  .container1 {
    max-width: 950px;
  }

  .navbar-link:is(:hover, :focus) {
    color: var(--middle-blue-green);
  }
}

/* For service features smaller screen adjustment */
@media (max-width: 767px) {
  .service-list {
    flex-wrap: wrap; /* Allow items to wrap to the next line on smaller screens */
  }

  .service-item {
    flex: 0 0 calc(50% - 20px); /* Adjust the width for two items in a row on smaller screens */
  }
}

/**
 * responsive for larger than 1200px screen
 */

@media (min-width: 1200px) {
  :root {
    --fs-1: 6.25rem;
  }

  .container1 {
    max-width: 1150px;
  }
}
